name: Auto Tag

on:
  push:
    branches: [main, master]
    paths:
      - 'pyproject.toml'

jobs:
  auto-tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Check if version changed
      id: version-check
      run: |
        # Get current version from pyproject.toml
        CURRENT_VERSION=$(grep '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
        
        # Get previous version from the previous commit
        git checkout HEAD~1 -- pyproject.toml 2>/dev/null || echo "No previous version"
        PREVIOUS_VERSION=$(grep '^version = ' pyproject.toml 2>/dev/null | sed 's/version = "\(.*\)"/\1/' || echo "none")
        
        # Restore current pyproject.toml
        git checkout HEAD -- pyproject.toml
        
        echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        echo "previous_version=$PREVIOUS_VERSION" >> $GITHUB_OUTPUT
        
        if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
          echo "version_changed=true" >> $GITHUB_OUTPUT
          echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
        else
          echo "version_changed=false" >> $GITHUB_OUTPUT
          echo "Version unchanged: $CURRENT_VERSION"
        fi

    - name: Check if tag exists
      id: tag-check
      if: steps.version-check.outputs.version_changed == 'true'
      run: |
        TAG="v${{ steps.version-check.outputs.current_version }}"
        if git rev-parse "$TAG" >/dev/null 2>&1; then
          echo "tag_exists=true" >> $GITHUB_OUTPUT
          echo "Tag $TAG already exists"
        else
          echo "tag_exists=false" >> $GITHUB_OUTPUT
          echo "Tag $TAG does not exist"
        fi

    - name: Create and push tag
      if: steps.version-check.outputs.version_changed == 'true' && steps.tag-check.outputs.tag_exists == 'false'
      run: |
        TAG="v${{ steps.version-check.outputs.current_version }}"
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag -a "$TAG" -m "Release $TAG"
        git push origin "$TAG"
        echo "Created and pushed tag: $TAG"
